# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Nbeap1i6OMBw3iLLQ0dcvZLPqYBg7gLr
"""

import streamlit as st
import pandas as pd
import fitz  # PyMuPDF for PDFs
import google.generativeai as genai
from docx import Document

st.title("AI Tender Proposal Generator")

# Upload Files
uploaded_csv = st.file_uploader("Upload Project Database (CSV)", type=["csv"])
uploaded_cv = st.file_uploader("Upload CVs (PDF)", type=["pdf"])
uploaded_old_proposal = st.file_uploader("Upload Old Proposal (PDF)", type=["pdf"])

if uploaded_csv and uploaded_cv and uploaded_old_proposal:
    project_df = pd.read_csv(uploaded_csv)

    def extract_text_from_pdf(pdf_file):
        text = ""
        with fitz.open(pdf_file) as doc:
            for page in doc:
                text += page.get_text("text") + "\n"
        return text

    cv_text = extract_text_from_pdf(uploaded_cv)
    old_proposal_text = extract_text_from_pdf(uploaded_old_proposal)

    project_name = st.text_input("Enter Project Name")
    if st.button("Generate Proposal"):
        project_info = project_df[project_df['Project Name'].str.contains(project_name, case=False, na=False)]

        if project_info.empty:
            st.error("Project not found in database.")
        else:
            project_details = project_info.to_dict(orient='records')[0]
            prompt = f"""
            Based on the old proposal:
            {old_proposal_text}

            And the project details:
            {project_details}

            And the CVs:
            {cv_text}

            Generate a new tender proposal following the format of the old proposal.
            """

            response = genai.chat(model="gemini-pro", messages=[{"role": "user", "content": prompt}])
            proposal_text = response.text

            doc = Document()
            for para in proposal_text.split("\n"):
                doc.add_paragraph(para)

            doc_path = "Generated_Proposal.docx"
            doc.save(doc_path)
            st.success("Proposal generated successfully! Download it below:")
            with open(doc_path, "rb") as f:
                st.download_button("Download Proposal", f, file_name="Generated_Proposal.docx")